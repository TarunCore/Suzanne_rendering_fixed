material {
    name : Subsurface,
    shadingModel : subsurface,
    transparency : twoPassesOneSide,
    blending: transparent,
    depthWrite: false,
    culling: none,
    parameters : [
        {
            type : float3,
            name : baseColor
        },
        {
            type : float,
            name : roughness
        },
        {
            type : float,
            name : metallic
        },
        {
            type : float,
            name : reflectance
        },
        {
            type : float,
            name : thickness
        },
        {
            type : float,
            name : subsurfacePower
        },
        {
            type : float3,
            name : subsurfaceColor
        },
        {
            type : float4,
            name : emissive
        },
        {
            type : float,
            name : opacity
        }
    ],
    specularAntiAliasing : true,
}

fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        material.baseColor.a = materialParams.opacity;
        material.baseColor.rgb = materialParams.baseColor;
        material.roughness = materialParams.roughness;
        material.metallic = materialParams.metallic;
        material.reflectance = materialParams.reflectance;
        material.thickness = materialParams.thickness;
        material.subsurfacePower = materialParams.subsurfacePower;
        material.subsurfaceColor = materialParams.subsurfaceColor;
        material.emissive = materialParams.emissive;

    }
}